name: Auto Release with Build ZIP

on:
  pull_request:
    types: [closed]
    branches:
      - master

jobs:
  release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # 1. リポジトリチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Node.js 環境セットアップ
      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '18'

      # 3. 依存関係インストール
      - name: Install dependencies
        run: npm ci

      # 4. ビルド実行 → build/ ディレクトリ生成
      - name: Build project
        run: npm run build

      # 5. 次のタグを計算（vYYYY.N形式、年ごとに1からスタート）
      - name: Get next vYYYY.N version
        id: bump_version
        run: |
          year=$(date +'%Y')
          latest_tag=$(git tag --list "v${year}.*" | sort -V | tail -n 1)

          if [ -z "$latest_tag" ]; then
            next_version="v${year}.1"
          else
            current_number=${latest_tag#v${year}.}
            next_number=$((current_number+1))
            next_version="v${year}.${next_number}"
          fi

          echo "next_version=$next_version" >> $GITHUB_OUTPUT

      # 6. Git タグ作成＆push
      - name: Create Git tag
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag ${{ steps.bump_version.outputs.next_version }}
          git push origin ${{ steps.bump_version.outputs.next_version }}

      # 7. build/ フォルダをタグ名入り ZIP にまとめる
      - name: Zip build folder
        run: |
          zip -r ${{ steps.bump_version.outputs.next_version }}-build.zip build/

      # 8. GitHub Release 作成
      - name: Create GitHub Release
        id: release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.bump_version.outputs.next_version }}
          name: Release ${{ steps.bump_version.outputs.next_version }}
          generate_release_notes: true

      # 9. Release に ZIP をアップロード
      - name: Upload build ZIP to Release
        uses: actions/upload-release-asset@v2
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ${{ steps.bump_version.outputs.next_version }}-build.zip
          asset_name: ${{ steps.bump_version.outputs.next_version }}-build.zip
          asset_content_type: application/zip
